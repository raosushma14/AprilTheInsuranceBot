//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SMSGlobal
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:MobileWorks", ConfigurationName="SMSGlobal.MobileWorksPortType")]
    public interface MobileWorksPortType
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiValidateLogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiValidateLoginAsync(string user, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiRenewTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiRenewTicketAsync(string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiLogout", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiLogoutAsync(string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiGetPreference", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiGetPreferenceAsync(string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiGetPreferenceSender", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiGetPreferenceSenderAsync(string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiSetPreferenceSender", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiSetPreferenceSenderAsync(string ticket, string sender);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiGetInterface", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiGetInterfaceAsync(string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiInterface", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiInterfaceAsync(string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiGetUpdate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiGetUpdateAsync(string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiSendSms", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiSendSmsAsync(string ticket, string sms_from, string sms_to, string msg_content, string msg_type, string unicode, string schedule);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#api2WaySendLongSms", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> api2WaySendLongSmsAsync(string ticket, string sms_from, string sms_to, string msg_content, string msg_type, string userfield, string unicode, string schedule);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiSendSms", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> api2WaySendSmsAsync(string ticket, string sms_from, string sms_to, string msg_content, string msg_type, string userfield, string unicode, string schedule);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LexicomSoap#apiSendLongSms", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        System.Threading.Tasks.Task<SMSGlobal.apiSendLongSmsResponse> apiSendLongSmsAsync(SMSGlobal.apiSendLongSmsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiSendSmsToGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiSendSmsToGroupAsync(string ticket, string sms_from, string sms_to, string msg_content, string msg_type, string unicode, string schedule);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiSendSmsToList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiSendSmsToListAsync(string ticket, string sms_from, string sms_to, string msg_content, string msg_type, string unicode, string schedule);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiBalanceSms", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiBalanceSmsAsync(string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiBalanceCheck", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiBalanceCheckAsync(string ticket, string iso_country);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiGetBuddyList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiGetBuddyListAsync(string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiAddBuddy", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiAddBuddyAsync(string ticket, string bgid, string firstname, string lastname, string nickname, string cellphone, string email, string birthday);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiUpdateBuddy", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiUpdateBuddyAsync(string ticket, string bid, string firstname, string lastname, string nickname, string cellphone, string email, string birthday);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiMoveBuddy", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiMoveBuddyAsync(string ticket, string bid, string bgid_from, string bgid_to);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiCopyBuddy", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiCopyBuddyAsync(string ticket, string bid, string bgid_from, string bgid_to);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiRemoveBuddy", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiRemoveBuddyAsync(string ticket, string bid, string bgid);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiDeleteBuddy", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiDeleteBuddyAsync(string ticket, string bid);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiAddBuddyGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiAddBuddyGroupAsync(string ticket, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiUpdateBuddyGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiUpdateBuddyGroupAsync(string ticket, string bgid, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiDeleteBuddyGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiDeleteBuddyGroupAsync(string ticket, string bgid);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiAddBuddyBulkList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiAddBuddyBulkListAsync(string ticket, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiUpdateBuddyBulkList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiUpdateBuddyBulkListAsync(string ticket, string bblid, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiDeleteBuddyBulkList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiDeleteBuddyBulkListAsync(string ticket, string bblid);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiMoveBuddyToList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiMoveBuddyToListAsync(string ticket, string bid, string blid_from, string blid_to);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiCopyBuddyToList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiCopyBuddyToListAsync(string ticket, string bid, string blid_from, string blid_to);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiRemoveBuddyFromList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiRemoveBuddyFromListAsync(string ticket, string bid, string blid);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiMoveBuddyGroupToList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiMoveBuddyGroupToListAsync(string ticket, string bgid, string blid_from, string blid_to);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiCopyBuddyGroupToList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiCopyBuddyGroupToListAsync(string ticket, string bgid, string blid_from, string blid_to);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiRemoveBuddyGroupFromList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiRemoveBuddyGroupFromListAsync(string ticket, string bgid, string blid);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiMoveListToList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiMoveListToListAsync(string ticket, string oblid, string blid_from, string blid_to);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiCopyListToList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiCopyListToListAsync(string ticket, string oblid, string blid_from, string blid_to);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiRemoveListFromList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiRemoveListFromListAsync(string ticket, string oblid, string blid);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:MobileWorks#apiMTEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> apiMTEmailAsync(string ticket, string sms_from, string sms_to, string msg_content, string msg_type, string unicode, string schedule, string return_email);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="apiSendLongSms", WrapperNamespace="urn:LexicomSoap", IsWrapped=true)]
    public partial class apiSendLongSmsRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string ticket;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sms_from;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string sms_to;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string msg_content;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=4)]
        public string msg_type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=5)]
        public string unicode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=6)]
        public string schedule;
        
        public apiSendLongSmsRequest()
        {
        }
        
        public apiSendLongSmsRequest(string ticket, string sms_from, string sms_to, string msg_content, string msg_type, string unicode, string schedule)
        {
            this.ticket = ticket;
            this.sms_from = sms_from;
            this.sms_to = sms_to;
            this.msg_content = msg_content;
            this.msg_type = msg_type;
            this.unicode = unicode;
            this.schedule = schedule;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="apiSendLongSmsResponse", WrapperNamespace="urn:LexicomSoap", IsWrapped=true)]
    public partial class apiSendLongSmsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string @return;
        
        public apiSendLongSmsResponse()
        {
        }
        
        public apiSendLongSmsResponse(string @return)
        {
            this.@return = @return;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public interface MobileWorksPortTypeChannel : SMSGlobal.MobileWorksPortType, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public partial class MobileWorksPortTypeClient : System.ServiceModel.ClientBase<SMSGlobal.MobileWorksPortType>, SMSGlobal.MobileWorksPortType
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public MobileWorksPortTypeClient() : 
                base(MobileWorksPortTypeClient.GetDefaultBinding(), MobileWorksPortTypeClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.MobileWorksPort.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MobileWorksPortTypeClient(EndpointConfiguration endpointConfiguration) : 
                base(MobileWorksPortTypeClient.GetBindingForEndpoint(endpointConfiguration), MobileWorksPortTypeClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MobileWorksPortTypeClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(MobileWorksPortTypeClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MobileWorksPortTypeClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(MobileWorksPortTypeClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MobileWorksPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> apiValidateLoginAsync(string user, string password)
        {
            return base.Channel.apiValidateLoginAsync(user, password);
        }
        
        public System.Threading.Tasks.Task<string> apiRenewTicketAsync(string ticket)
        {
            return base.Channel.apiRenewTicketAsync(ticket);
        }
        
        public System.Threading.Tasks.Task<string> apiLogoutAsync(string ticket)
        {
            return base.Channel.apiLogoutAsync(ticket);
        }
        
        public System.Threading.Tasks.Task<string> apiGetPreferenceAsync(string ticket)
        {
            return base.Channel.apiGetPreferenceAsync(ticket);
        }
        
        public System.Threading.Tasks.Task<string> apiGetPreferenceSenderAsync(string ticket)
        {
            return base.Channel.apiGetPreferenceSenderAsync(ticket);
        }
        
        public System.Threading.Tasks.Task<string> apiSetPreferenceSenderAsync(string ticket, string sender)
        {
            return base.Channel.apiSetPreferenceSenderAsync(ticket, sender);
        }
        
        public System.Threading.Tasks.Task<string> apiGetInterfaceAsync(string ticket)
        {
            return base.Channel.apiGetInterfaceAsync(ticket);
        }
        
        public System.Threading.Tasks.Task<string> apiInterfaceAsync(string ticket)
        {
            return base.Channel.apiInterfaceAsync(ticket);
        }
        
        public System.Threading.Tasks.Task<string> apiGetUpdateAsync(string ticket)
        {
            return base.Channel.apiGetUpdateAsync(ticket);
        }
        
        public System.Threading.Tasks.Task<string> apiSendSmsAsync(string ticket, string sms_from, string sms_to, string msg_content, string msg_type, string unicode, string schedule)
        {
            return base.Channel.apiSendSmsAsync(ticket, sms_from, sms_to, msg_content, msg_type, unicode, schedule);
        }
        
        public System.Threading.Tasks.Task<string> api2WaySendLongSmsAsync(string ticket, string sms_from, string sms_to, string msg_content, string msg_type, string userfield, string unicode, string schedule)
        {
            return base.Channel.api2WaySendLongSmsAsync(ticket, sms_from, sms_to, msg_content, msg_type, userfield, unicode, schedule);
        }
        
        public System.Threading.Tasks.Task<string> api2WaySendSmsAsync(string ticket, string sms_from, string sms_to, string msg_content, string msg_type, string userfield, string unicode, string schedule)
        {
            return base.Channel.api2WaySendSmsAsync(ticket, sms_from, sms_to, msg_content, msg_type, userfield, unicode, schedule);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SMSGlobal.apiSendLongSmsResponse> SMSGlobal.MobileWorksPortType.apiSendLongSmsAsync(SMSGlobal.apiSendLongSmsRequest request)
        {
            return base.Channel.apiSendLongSmsAsync(request);
        }
        
        public System.Threading.Tasks.Task<SMSGlobal.apiSendLongSmsResponse> apiSendLongSmsAsync(string ticket, string sms_from, string sms_to, string msg_content, string msg_type, string unicode, string schedule)
        {
            SMSGlobal.apiSendLongSmsRequest inValue = new SMSGlobal.apiSendLongSmsRequest();
            inValue.ticket = ticket;
            inValue.sms_from = sms_from;
            inValue.sms_to = sms_to;
            inValue.msg_content = msg_content;
            inValue.msg_type = msg_type;
            inValue.unicode = unicode;
            inValue.schedule = schedule;
            return ((SMSGlobal.MobileWorksPortType)(this)).apiSendLongSmsAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<string> apiSendSmsToGroupAsync(string ticket, string sms_from, string sms_to, string msg_content, string msg_type, string unicode, string schedule)
        {
            return base.Channel.apiSendSmsToGroupAsync(ticket, sms_from, sms_to, msg_content, msg_type, unicode, schedule);
        }
        
        public System.Threading.Tasks.Task<string> apiSendSmsToListAsync(string ticket, string sms_from, string sms_to, string msg_content, string msg_type, string unicode, string schedule)
        {
            return base.Channel.apiSendSmsToListAsync(ticket, sms_from, sms_to, msg_content, msg_type, unicode, schedule);
        }
        
        public System.Threading.Tasks.Task<string> apiBalanceSmsAsync(string ticket)
        {
            return base.Channel.apiBalanceSmsAsync(ticket);
        }
        
        public System.Threading.Tasks.Task<string> apiBalanceCheckAsync(string ticket, string iso_country)
        {
            return base.Channel.apiBalanceCheckAsync(ticket, iso_country);
        }
        
        public System.Threading.Tasks.Task<string> apiGetBuddyListAsync(string ticket)
        {
            return base.Channel.apiGetBuddyListAsync(ticket);
        }
        
        public System.Threading.Tasks.Task<string> apiAddBuddyAsync(string ticket, string bgid, string firstname, string lastname, string nickname, string cellphone, string email, string birthday)
        {
            return base.Channel.apiAddBuddyAsync(ticket, bgid, firstname, lastname, nickname, cellphone, email, birthday);
        }
        
        public System.Threading.Tasks.Task<string> apiUpdateBuddyAsync(string ticket, string bid, string firstname, string lastname, string nickname, string cellphone, string email, string birthday)
        {
            return base.Channel.apiUpdateBuddyAsync(ticket, bid, firstname, lastname, nickname, cellphone, email, birthday);
        }
        
        public System.Threading.Tasks.Task<string> apiMoveBuddyAsync(string ticket, string bid, string bgid_from, string bgid_to)
        {
            return base.Channel.apiMoveBuddyAsync(ticket, bid, bgid_from, bgid_to);
        }
        
        public System.Threading.Tasks.Task<string> apiCopyBuddyAsync(string ticket, string bid, string bgid_from, string bgid_to)
        {
            return base.Channel.apiCopyBuddyAsync(ticket, bid, bgid_from, bgid_to);
        }
        
        public System.Threading.Tasks.Task<string> apiRemoveBuddyAsync(string ticket, string bid, string bgid)
        {
            return base.Channel.apiRemoveBuddyAsync(ticket, bid, bgid);
        }
        
        public System.Threading.Tasks.Task<string> apiDeleteBuddyAsync(string ticket, string bid)
        {
            return base.Channel.apiDeleteBuddyAsync(ticket, bid);
        }
        
        public System.Threading.Tasks.Task<string> apiAddBuddyGroupAsync(string ticket, string name)
        {
            return base.Channel.apiAddBuddyGroupAsync(ticket, name);
        }
        
        public System.Threading.Tasks.Task<string> apiUpdateBuddyGroupAsync(string ticket, string bgid, string name)
        {
            return base.Channel.apiUpdateBuddyGroupAsync(ticket, bgid, name);
        }
        
        public System.Threading.Tasks.Task<string> apiDeleteBuddyGroupAsync(string ticket, string bgid)
        {
            return base.Channel.apiDeleteBuddyGroupAsync(ticket, bgid);
        }
        
        public System.Threading.Tasks.Task<string> apiAddBuddyBulkListAsync(string ticket, string name)
        {
            return base.Channel.apiAddBuddyBulkListAsync(ticket, name);
        }
        
        public System.Threading.Tasks.Task<string> apiUpdateBuddyBulkListAsync(string ticket, string bblid, string name)
        {
            return base.Channel.apiUpdateBuddyBulkListAsync(ticket, bblid, name);
        }
        
        public System.Threading.Tasks.Task<string> apiDeleteBuddyBulkListAsync(string ticket, string bblid)
        {
            return base.Channel.apiDeleteBuddyBulkListAsync(ticket, bblid);
        }
        
        public System.Threading.Tasks.Task<string> apiMoveBuddyToListAsync(string ticket, string bid, string blid_from, string blid_to)
        {
            return base.Channel.apiMoveBuddyToListAsync(ticket, bid, blid_from, blid_to);
        }
        
        public System.Threading.Tasks.Task<string> apiCopyBuddyToListAsync(string ticket, string bid, string blid_from, string blid_to)
        {
            return base.Channel.apiCopyBuddyToListAsync(ticket, bid, blid_from, blid_to);
        }
        
        public System.Threading.Tasks.Task<string> apiRemoveBuddyFromListAsync(string ticket, string bid, string blid)
        {
            return base.Channel.apiRemoveBuddyFromListAsync(ticket, bid, blid);
        }
        
        public System.Threading.Tasks.Task<string> apiMoveBuddyGroupToListAsync(string ticket, string bgid, string blid_from, string blid_to)
        {
            return base.Channel.apiMoveBuddyGroupToListAsync(ticket, bgid, blid_from, blid_to);
        }
        
        public System.Threading.Tasks.Task<string> apiCopyBuddyGroupToListAsync(string ticket, string bgid, string blid_from, string blid_to)
        {
            return base.Channel.apiCopyBuddyGroupToListAsync(ticket, bgid, blid_from, blid_to);
        }
        
        public System.Threading.Tasks.Task<string> apiRemoveBuddyGroupFromListAsync(string ticket, string bgid, string blid)
        {
            return base.Channel.apiRemoveBuddyGroupFromListAsync(ticket, bgid, blid);
        }
        
        public System.Threading.Tasks.Task<string> apiMoveListToListAsync(string ticket, string oblid, string blid_from, string blid_to)
        {
            return base.Channel.apiMoveListToListAsync(ticket, oblid, blid_from, blid_to);
        }
        
        public System.Threading.Tasks.Task<string> apiCopyListToListAsync(string ticket, string oblid, string blid_from, string blid_to)
        {
            return base.Channel.apiCopyListToListAsync(ticket, oblid, blid_from, blid_to);
        }
        
        public System.Threading.Tasks.Task<string> apiRemoveListFromListAsync(string ticket, string oblid, string blid)
        {
            return base.Channel.apiRemoveListFromListAsync(ticket, oblid, blid);
        }
        
        public System.Threading.Tasks.Task<string> apiMTEmailAsync(string ticket, string sms_from, string sms_to, string msg_content, string msg_type, string unicode, string schedule, string return_email)
        {
            return base.Channel.apiMTEmailAsync(ticket, sms_from, sms_to, msg_content, msg_type, unicode, schedule, return_email);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.MobileWorksPort))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.MobileWorksPort))
            {
                return new System.ServiceModel.EndpointAddress("http://api.smsglobal.com/soap/soapserver.php");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return MobileWorksPortTypeClient.GetBindingForEndpoint(EndpointConfiguration.MobileWorksPort);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return MobileWorksPortTypeClient.GetEndpointAddress(EndpointConfiguration.MobileWorksPort);
        }
        
        public enum EndpointConfiguration
        {
            
            MobileWorksPort,
        }
    }
}
